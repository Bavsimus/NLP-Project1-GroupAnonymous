# -*- coding: utf-8 -*-
"""naiveBayes_TFIDF_Ngrams_Comparison.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WgoswEysp0rvedqn31fGc8akrYvSW8G2
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics import accuracy_score, confusion_matrix, precision_score, recall_score


df = pd.read_csv('spam_ham_dataset.csv')
df['label_num'] = df['label'].map({'spam': 1, 'ham': 0})
X = df['text']
y = df['label_num']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


vectorizer = TfidfVectorizer(ngram_range=(1, 3), stop_words='english', lowercase=True)
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)
print(f"Total features created (n-grams): {X_train_vec.shape[1]}")


nb_model = MultinomialNB()
nb_model.fit(X_train_vec, y_train)

y_pred_nb = nb_model.predict(X_test_vec)
accuracy_nb = accuracy_score(y_test, y_pred_nb)
precision_nb = precision_score(y_test, y_pred_nb)
cm_nb = confusion_matrix(y_test, y_pred_nb)

print("--- Naive Bayes Results (BASELINE) ---")
print(f"Accuracy: {accuracy_nb:.4f}")
print(f"Precision (Spam detection correctness): {precision_nb:.4f}")
print("Confusion Matrix:\n", cm_nb)